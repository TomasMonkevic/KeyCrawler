// <auto-generated />
using KeyCrawler.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace KeyCrawler.Persistence.Migrations
{
    [DbContext(typeof(KeyCrawlerContext))]
    [Migration("20201230200641_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("KeyCrawler.Domain.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("HitCount")
                        .HasColumnType("integer");

                    b.Property<string>("Keyword")
                        .HasColumnType("text");

                    b.Property<int>("UriReportId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UriReportId");

                    b.ToTable("Match");
                });

            modelBuilder.Entity("KeyCrawler.Domain.Search", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("JobId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Searches");
                });

            modelBuilder.Entity("KeyCrawler.Domain.UriReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("SearchId")
                        .HasColumnType("text");

                    b.Property<string>("Uri")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SearchId");

                    b.ToTable("UriReports");
                });

            modelBuilder.Entity("KeyCrawler.Domain.Match", b =>
                {
                    b.HasOne("KeyCrawler.Domain.UriReport", "UriReport")
                        .WithMany("Matches")
                        .HasForeignKey("UriReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UriReport");
                });

            modelBuilder.Entity("KeyCrawler.Domain.UriReport", b =>
                {
                    b.HasOne("KeyCrawler.Domain.Search", "Search")
                        .WithMany("UriReports")
                        .HasForeignKey("SearchId");

                    b.Navigation("Search");
                });

            modelBuilder.Entity("KeyCrawler.Domain.Search", b =>
                {
                    b.Navigation("UriReports");
                });

            modelBuilder.Entity("KeyCrawler.Domain.UriReport", b =>
                {
                    b.Navigation("Matches");
                });
#pragma warning restore 612, 618
        }
    }
}
